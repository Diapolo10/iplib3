[build-system]
requires = ["poetry-core>=1.2.0", "wheel",]
build-backend = "poetry.core.masonry.api"


[tool.coverage.run]
branch = true
relative_files = true
omit = [
    ".tox/*",
    "tests/*",
]


[tool.coverage.report]
exclude_lines = [
    "pragma: not covered",
    "@overload",
    "if TYPE_CHECKING:",
]


[tool.poetry]
name = "iplib3"
version = "0.2.4"
description = "A modern, object-oriented approach to IP addresses."

packages = [
    { include = "iplib3", from = "src" },
]

authors = ["Lari Liuhamo <lari.liuhamo+pypi@gmail.com>",]
maintainers = ["Lari Liuhamo <lari.liuhamo+pypi@gmail.com>",]

include = ["CHANGELOG.md", "LICENSE", "py.typed",]
license = "MIT"
readme = "README.md"

homepage = "https://pypi.org/project/iplib3/"
repository = "https://github.com/Diapolo10/iplib3"
documentation = "https://github.com/Diapolo10/iplib3/tree/main/docs"

keywords = [
    "network",
    "networking",
    "ip",
    "ipaddress",
    "address",
    "python3",
    "pathlib",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries",
    "Typing :: Typed",
]


[tool.poetry.dependencies]
python = "^3.9.0"


[tool.poetry.group.dev.dependencies]
mypy = "^1.15.0"


[tool.poetry.group.linters]
optional = true


[tool.poetry.group.linters.dependencies]
ruff = "^0.11.0"


[tool.poetry.group.tests]
optional = true


[tool.poetry.group.tests.dependencies]
pytest = "^8.3.5"
pytest-cov = "^6.0.0"
tox = "^4.25.0"
tox-gh-actions = "^3.3.0"


[tool.poetry.urls]
"Source code" = "https://github.com/Diapolo10/iplib3"
"Tracker" = "https://github.com/Diapolo10/iplib3/issues"
"Changelog" = "https://github.com/Diapolo10/iplib3/blob/main/CHANGELOG.md"


[tool.pytest.ini_options]
minversion = "6.0"
addopts = """
--doctest-modules \
--cov=./ \
--cov-append \
--cov-report html:tests/reports/coverage-html \
--cov-report xml:tests/reports/coverage.xml \
--ignore=docs/
"""
testpaths = [
    "tests",
]


[tool.ruff]
lint.select = ["ALL"]
lint.ignore = [
    "COM812",  # Missing trailing comma (disabled due to formatter conflict)
    "D203",    # One blank line before class docstring
    "D212",    # Multi-line summary first line
    "ISC001",  # Single-line implicit string concatenation (disabled due to formatter conflict)
    "PLR0913", # Too many arguments
    "Q000",    # Single quotes found but double quotes preferred
]
line-length = 120
# preview = true
show-fixes = true
src = ["src",]
target-version = "py39"


[tool.ruff.lint.flake8-copyright]
author = "Lari Liuhamo"


[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
multiline-quotes = "double"


[tool.ruff.lint.mccabe]
max-complexity = 10


[tool.ruff.lint.per-file-ignores]
# https://beta.ruff.rs/docs/rules/
"__init__.py" = ["F401", "F403", "F405", "PGH003",]
"tests/*" = ["ANN", "ARG", "INP001", "S101",]


[tool.ruff.lint.pylint]
max-args = 15
max-branches = 20
max-returns = 10
max-statements = 80


[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"


[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py39, py310, py311, py312, pypy3

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    pypy-3.10: pypy3

[testenv]
passenv = GITHUB_*
allowlist_externals = poetry

commands =
    poetry run pytest
    poetry run coverage report
"""
