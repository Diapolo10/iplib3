# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: iplib3 CI

on: [ push, pull_request ]
  # push:
  #   branches: [ main, nightly ]
  # pull_request:
  #   branches: [ main, nightly ]

jobs:

  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2.2.1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: Gr1N/setup-poetry@v4

    - name: Install library and dependencies
      run: |
        python -m pip install --upgrade pip
        poetry install
        PYTHONPATH=src/ poetry run python -m pip install tox tox-gh-actions
        
    - name: Install dependencies (Linux / Mac OS)
      if: ${{ startsWith(matrix.os, 'windows') == false }}
      run: |
        if [ -f requirements.txt ]; then PYTHONPATH=src/ poetry run python3 -m pip install -r requirements.txt; fi

    - name: Install dependencies (Windows)
      if: ${{ startsWith(matrix.os, 'windows') == true }}
      run: |
        if(Test-Path -Path requirements.txt) {poetry run python -m pip install -r requirements.txt}
        
    # - name: Install library
    #   run: |
    #     pip install -e .
        
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    # - name: Test with pytest and run coveralls
    #   run: |
    #     coverage run --source=iplib3 -m pytest tests/
    #     coveralls
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
    #     COVERALLS_FLAG_NAME: ${{ matrix.os }}-${{ matrix.python-version }}
    #     COVERALLS_SERVICE_NAME: github-actions
    #     COVERALLS_PARALLEL: true

    - name: Run Tox (Pytest + Coveralls)
      run: PYTHONPATH=src/ poetry run tox

  # coveralls_finish:
  #   name: Finish coveralls
  #   needs: build-and-test
  #   runs-on: ubuntu-latest
  #   container: python:3-slim
  #   steps:
  #   - name: Coveralls Finished
  #     run: |
  #       pip3 install --upgrade coveralls
  #       coveralls debug --finish --service=github-actions
  #     env:
  #       # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
  #       GITHUB_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

  coveralls-finish:
    name: Finalize coveralls.io
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
        
  build-n-publish:
    name: Build and publish Python 🐍 distributions 📦 to PyPI and TestPyPI
    runs-on: ubuntu-latest
    if: endsWith(github.ref, 'master')

    steps:
    - uses: actions/checkout@master

    # - name: Set up Python 3.9
    #   uses: actions/setup-python@v1
    #   with:
    #     python-version: 3.9

    # - name: Install pep517
    #   run: >-
    #     python -m
    #     pip install pep517
    #     --user

    # - name: Build a binary wheel and a source tarball
    #   run: >-
    #     python -m
    #     pep517.build
    #     --source
    #     --binary
    #     --out-dir dist/
    #     .

    # - name: Publish distribution 📦 to Test PyPI
    #   uses: pypa/gh-action-pypi-publish@master
    #   with:
    #     password: ${{ secrets.TEST_PYPI_PASSWORD }}
    #     repository_url: https://test.pypi.org/legacy/

    # - name: Publish distribution 📦 to PyPI
    #   #if: startsWith(github.ref, 'refs/tags/v') # TODO: Find a permanent solution
    #   uses: pypa/gh-action-pypi-publish@master
    #   with:
    #     password: ${{ secrets.PYPI_PASSWORD }}
    
    - name: Publish distribution 📦 to Test PyPI
      uses: JRubics/poetry-publish@v1.6
      with:
        pypi_token: ${{ secrets.TEST_PYPI_PASSWORD }}
        repository_name: 'testpypi'
        repository_url: 'https://test.pypi.org/legacy/'
        ignore_dev_requirements: "yes"

    - name: Publish distribution 📦 to PyPI
      uses: JRubics/poetry-publish@v1.6
      with:
        pypi_token: ${{ secrets.PYPI_PASSWORD }}
        ignore_dev_requirements: "yes"
